<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0efIUHqJk5H05CcrWErDDLKJrJTRKWVpgFQ2S5F8LJMrYUmlWfZSkrVs4y3VqEdkEXKXH/JlMn8JTIDZ
        8JGNHNrsjmkeZVZzmcw0iDMDmScRFk5TQ9YE51Gw2UwudnGUr/RmfcK5TnHYjrMglSzkc+SYzv+w055j
        cec7tflMeNGTOPcEKD7zSUZQ+tOgvwloQgU60JgB8qAPlYtCJXpNhm6xnBDF6FkmKtGKKgSeGQUpXTaq
        0I6qcpUhRSlVRprQkobloymF6U9WGtCWEumiMcVpRWZK05qmaJ85BepFdnrPnuLnpkEF6VDtWdT7vBSp
        MVXqUpnqIKc+NaNRXedUo1RVq/oTq+HUap+42lVYfhWsYS3VWMm6SLNaE63mUuta1dhWt771X3GVqxHp
        Wk27+vCHeeXhXpPZ1zFyErAzFOxgxAnrR7welneJ9eViU9lYx84Nsr2ULDYpW1mXXXaWmc2nYTlrWc+e
        ErQd3exoLVVa0562pqlVbZtYy0nXTlW0sd3UbFFZ27DeFrey1e16eEtY3/42SMEV7nAzC1vjbge5yVXu
        aYvbXHU+t53RHe50qWsd614Xu9HV7nZz013vfte8zBWvYshLUfO2t6EOTW9b1ktL99Y3m+iNb1nmS1/7
        9lefP81vXebrXwLT66gBVsp+C7zgYAoTwUBRMIMlbGD4PngkA56scIYbXFAL8yTCGgYxhR3cYZB8OMQn
        FjGHSRwSDKPYxR7FL4JN/GIap/ikK5bIjGu8Y3IeuLk65nGQbexBCwNZyEfucYXXamQkN/m+AMYtk508
        5SdD2bFSpnKW/2vlJbdYy1826Y2timUwl7nKSk4nmc285i372Jv75S+b5UzJ8EJUzXPG85lHXFYv59nP
        iUSzGeH8Z0JLqc6avHOhFa3nPYdx0IuGtKFjPMJHR6fa0pJ28wArfWlOu/TQlE50p0Wd5ED/bdOjRrWn
        J624U6fa1arO9NRa/WpawzrWCZt1rXUdpk/LOte7BrafVp3bUAfb2DDmcr9+fWxm83rYT4JznJs97cac
        UtnFpna2kZ1s4PZZ29+utrUTFW1wl9uo3EYmts29blveWjnkZne8z+3u8S5b3vfGNLqrY2989xsv4qYP
        vP098Oz0WjYCJ3jC511qAatb4ZUPD7OKP4NwiFd84QzXCsUtvvGLS3wwGud4yDsu5oY7XOQnp7PBtwJy
        lLd8QADXKL9dPvMOqVymMqd5zn36bJGwXOc/HznJdeJzoBc96ETeCdGNvvSjD13pTIf6y/H79KhXXeqb
        pbrVtU4bWQo161sH+4NgnoCvh93sXI92a8++9q2mvZNsh3vb0x53uovV5HXHe7ifm0p3vi9Kt30HPKY8
        G3jCC36vhUe84aOaeMbPaqeNh7zjJxp5ykueqJXHvOXBmXnOM4uvnQc9sD4betJ7PmmlR722Fpp61rfe
        9UIJCAA7
</value>
  </data>
</root>